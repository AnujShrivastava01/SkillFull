version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: skillwave_db
      POSTGRES_USER: skillwave_user
      POSTGRES_PASSWORD: skillwave_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema-postgresql.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed-postgresql.sql:/docker-entrypoint-initdb.d/02-seed.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U skillwave_user -d skillwave_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://skillwave_user:skillwave_password@postgres:5432/skillwave_db
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      PORT: 3001
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend
  frontend:
    build: .
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
